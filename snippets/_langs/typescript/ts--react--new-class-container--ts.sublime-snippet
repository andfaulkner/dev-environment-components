<snippet>
  <description>New class component - container component - typescript</description>
<content><![CDATA[
/************************************** THIRD-PARTY IMPORTS ***************************************/
import * as React from 'react';
import * as ReactDOM from 'react-dom';
const classNames = require('classnames');

import { inject } from 'mobx-react';
import { PolyglotProps } from 'mad-utils/lib/browser';

import { ${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?\-container\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g} } from './${TM_FILENAME/(.+?)(\-container\.tsx)/\1/g}';

/******************************************** LOGGING *********************************************/
import { logFactory, logMarkers } from 'mad-logs';
const log = logFactory()(`${TM_FILENAME}`, logMarkers.zebra);

/**************************************** TYPE DEFINITIONS ****************************************/
interface ${1}Props extends PolyglotProps {}


/********************************************* EXPORT *********************************************/
/**
 * ${3: DESCRIPTION}
 */
export class ${1:${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g}} extends React.Component<${1}Props, {}> {
    render() {
        ${0}
        return (
            <${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?\-container\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g} />
        )
    }
};

]]></content>  
  <tabTrigger>rct_ts_new_class_container</tabTrigger>
  <scope>source.tsx</scope>
</snippet>
