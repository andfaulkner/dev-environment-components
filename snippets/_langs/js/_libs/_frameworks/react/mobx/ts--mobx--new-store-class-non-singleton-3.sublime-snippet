<snippet>
  <description>Create MobX non-singleton class store</description>
<content><![CDATA[
/*------------------------------------- THIRD-PARTY MODULES --------------------------------------*/
import {observable, action, computed, IObservableArray} from 'mobx';
import {Int, Any, pushIfNew} from 'mad-utils/lib/shared';

/*------------------------------------------- LOGGING --------------------------------------------*/
import {logFactory, Styles} from 'mad-logs/lib/shared';
const log = logFactory(`${1}`, Styles.hatBlock);

/*-------------------------------------------- EXPORT --------------------------------------------*/
/**
 * ${3: MobX store containing data about ${1}}
 */
export class ${1:${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g}} {
${5/.+/
    @observable
    public /g}${5:someValue = 300;}${5/.+/
    /g}
    /**
     * Factory method (true constructor)
     */
    public static new = (${7:rootStore${6/.+/: /}${6:RootStore}}): ${1} => {
        log.verbose(`${1}#new :: Creating new ${1}`);
        return new ${1}(${7/.+/rootStore/});
    }

    private constructor(${7/.+/public /g}${7:rootStore${6/.+/: /}${6:RootStore}}) {}
}

]]></content>
  <tabTrigger>mobx_store_nonsingleton</tabTrigger>
  <scope>source.ts, source.tsx</scope>
</snippet>
