<snippet>
  <description>Create new MobX singleton class store module with a factory</description>
<content><![CDATA[
/************************************** THIRD-PARTY MODULES ***************************************/
import {observable, action, computed, autorun, extendObservable, IObservableArray} from 'mobx';
import {Int, isInt, Any, pushIfNew} from 'mad-utils/lib/shared';

/**************************************** PROJECT MODULES *****************************************/

/******************************************** LOGGING *********************************************/
import {logFactory, Styles} from 'mad-logs/lib/shared';
const log = logFactory('${1}', Styles.hatBlock);

/********************************************* EXPORT *********************************************/
/**
 * @export ${1} ${3:Store data about 1}
 */
export class ${1:${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g}} {
    public static Instance: ${1} | null = null;
${5/.+/
    @observable
    public /g}${5:someValue = 300;}${5/.+/
    /g}
    /**
     * @constructor
     * Factory method (true constructor)
     */
    public static new = (${7:rootStore${6/.+/: /}${6:RootStore}}): ${1} => {
        if (!${1}.Instance) {
            ${1}.Instance = new ${1}(${7/.+/rootStore/g});
            log.verbose(`${1} created: `, ${1}.Instance);
        }
        return ${1}.Instance;
    }

    private constructor(${7/.+/public /g}${7:rootStore${6/.+/: /}${6:RootStore}}) {}
}

]]></content>
  <tabTrigger>mobx_singleton_class_store</tabTrigger>
  <scope>source.ts, source.tsx</scope>
</snippet>