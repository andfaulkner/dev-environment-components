<snippet>
    <description>New class component - container component - typescript</description>
<content><![CDATA[
/************************************** THIRD-PARTY MODULES ***************************************/
import * as React from 'react';
import * as cn from 'classnames';
import {inject, observer} from 'mobx-react';

/**************************************** PROJECT MODULES *****************************************/
import {${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?container\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g}View} from './${TM_FILENAME/(.+)(-container)\..+|.*/$1/:name}-view';

/******************************************** LOGGING *********************************************/
import {logFactory, logMarkers} from 'mad-logs';
const log = logFactory()(`${TM_FILENAME}`, logMarkers.zebra);

/**************************************** TYPE DEFINITIONS ****************************************/
interface ${1}Props {}

/********************************************* EXPORT *********************************************/
/**
 * ${2:DESCRIPTION}
 */
@inject('appState')
@observer
export class ${1:${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g}} extends React.Component<${1}Props, {}> {
    render() {
        log.verbose(`Rendering ${1} with this.props:`, this.props);
        ${0}
        return (
            <${TM_FILENAME/([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?[-_]?[-_]?([a-zA-Z])?([a-zA-Z0-9]+)?container\..*/\U$1\L$2\U$3\L$4\U$5\L$6\U$7\L$8\U$9\L$10\U$11\L$12/g}View/>
        );
    }
};

]]></content>  
    <tabTrigger>rct_ts_new_class_container</tabTrigger>
    <scope>source.tsx</scope>
</snippet>
