<snippet>
    <description>Output var to CLI in big, conspicuous block</description>
    <content><![CDATA[
//<!<*&!&LOGBUILDERFACTORY
// GOOD ONES: green (but looks yellow), yellow blue, cyan, white; ER: white.bold.bgRed
require('colors'); require('assert'); var util = require('util'); var _ = require('lodash');
console.log('\n\n\n');
var fLogLF = GLOBAL.fLogLF = function logBuilderFactory(func, color, style) {
	var style = style || false;
	var fullN = _.last(__filename.split('/')).toUpperCase() + ':: ' + func;
	function clv(msg, depth){
		if(_.isNull(msg)){
			console.log('null');
			return;
		} else if	(_.isUndefined(msg)) {
			console.log('undefined');
			return;
		} if(_.isObject(msg) && !_.isString(msg)){
			depth = depth || 4;
			console.log(util.inspect(msg, { depth: depth, color: true}));
			return;
		} else {
			console.log('\n' + ((style) ? fullN.underline[color][style] : fullN.underline[color]) +
				':::  ' + ((style) ? msg.underline[color][style] : msg.underline[color]));
		}
	};
	clv.fullTitle = function() {
		var fullTitle = ' ' + fullN + ' ';
		console.log('\n' + _.pad(fullTitle.red.bgBlack.underline, 200,
			'-----------------------------'.red.bgBlack.underline) +
			''.red + ''.bgBlack + ''.underline);
	};
	return clv;
};

fLogLF('TOP OF FILE').fullTitle();
var clv = fLogLF('global', 'yellow', 'green');
clv('logger in!');
//<!<*&!&//LOGBUILDERFACTORY
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>lMAGIC_file</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>
