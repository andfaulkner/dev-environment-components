[
  // Import handling
  { "keys": [ "alt+i", "alt+l" ], "command": "list_imports" },

  // Hop to location in line based on match
  { "keys": ["command+alt+n"],       "command": "jump_to_interactive"                            },
  { "keys": ["command+alt+shift+n"], "command": "jump_to_interactive", "args": { "extend": true }},

  // Run prettier
  { "keys": [ "command+ctrl+t" ], "command": "js_prettier"},

  // Copy path relative to project root
  { "keys": [ "command+ctrl+shift+p" ], "command": "side_bar_copy_path_absolute_from_project" },

  // Find & replace :: in-file
  { "keys": [ "command+shift+r" ], "command": "show_panel", "args": {"panel": "replace", "reverse": false }},

/******************************************** CONSOLE *********************************************/
  { "keys": [ "ctrl+alt+k" ],           "command": "clear_console"                            },

/************************************* SIDEBAR / FILE HANDLING *************************************/
  { "keys": [ "alt+r" ],                "command": "side_bar_rename"                          },
  { "keys": [ "alt+f" ],                "command": "side_bar_new_directory"                   },
  { "keys": [ "alt+n" ],                "command": "side_bar_new_file"                        },
  { "keys": [ "alt+shift+d" ],          "command": "side_bar_delete"                          },
  { "keys": [ "ctrl+alt+x" ],           "command": "side_bar_cut"                             },
  { "keys": [ "ctrl+alt+v" ],           "command": "side_bar_paste"                           },
  { "keys": [ "command+shift+t" ],      "command": "open_recent_file",  "args": {"index" : 0} },
  { "keys": [ "command+s" ],            "command": "save"                                     },
  { "keys": [ "alt+d" ],                "command": "side_bar_duplicate", "args": {"paths": []}},

  // Add new folder to project (opens prompt to select one)
  { "keys": ["command+ctrl+shift+d"], "command": "prompt_add_folder" },

/******************************************* FORMATTING *******************************************/
  { "keys": [ "command+ctrl+shift+a" ], "command": "alignment"                                },
  { "keys": [ "ctrl+alt+shift+l" ],     "command": "remove_trailing_whitespace"               },
  { "keys": [ "command+alt+j" ],        "command": "json_comma"                               },
  { "keys": [ "ctrl+shift+d" ],         "command": "convert_to_dash"                          },
  { "keys": [ "ctrl+shift+u" ],         "command": "convert_to_snake"                         },
  { "keys": [ "ctrl+shift+c" ],         "command": "convert_to_camel"                         },
  { "keys": [ "ctrl+shift+p" ],         "command": "convert_to_pascal"                        },
  // command + ctrl + j                 pretty_json

/******************************* CREATE NEW FILES, MAINLY SNIPPETS ********************************/
  // Create new snippet
  { "keys": [ "ctrl+alt+shift+s"], "command": "side_bar_new_file", "args": {"paths": [
    "~/Library/Application Support/Sublime Text 3/Packages/User/snippets/snippets"
  ]}},
  // Full path: /Users/andfaulkner/Library/Application Support/Sublime Text 3/Packages/User/snippets/snippets/_langs

  // Create new JS snippet
  { "keys": [ "ctrl+alt+shift+j"], "command": "side_bar_new_file", "args": {"paths": [
    "~/Library/Application Support/Sublime Text 3/Packages/User/snippets/snippets/_langs/js"
  ]}},

  // Create new CSS snippet
  { "keys": [ "ctrl+alt+shift+c"], "command": "side_bar_new_file", "args": {"paths": [
    "~/Library/Application Support/Sublime Text 3/Packages/User/snippets/snippets/_langs/css_scss"
  ]}},

  // Create new guide file
  { "keys": [ "ctrl+alt+shift+g"], "command": "side_bar_new_file", "args": {"paths": [
    "~/Library/Application Support/Sublime Text 3/Packages/User/snippets/_docs_guides/unsorted"
  ]}},

  // Duplicate file currently selected in view
  { "keys": ["super+shift+option+d"], "description": "Duplicate current file",
    "command": "chain", "args": {"commands":[
        ["select_all"],
        ["copy"],
        ["new_file"],
        ["paste"],
        ["save"]
  ]}},

/******************************************* OPEN FILES *******************************************/
  // Open sublime keymap (this file)
  { "keys": [ "command+ctrl+shift+b"],
    "command": "open_file",
    "args":  { "file": "~/Library/Application Support/Sublime Text 3/Packages/User/snippets/Default (OSX).sublime-keymap" }},

  // Open sublime custom manual / cheat notes"
  { "keys": [ "command+ctrl+shift+m"],
    "command": "open_file",
    "args":  { "file": "~/Library/Application Support/Sublime Text 3/Packages/User/snippets/custom-manuals/man__sublime" }},

  // View currently selected file in browser
  { "keys": ["ctrl+shift+alt+v"], "command": "view_in_browser" },

/**************************************** CODE NAVIGATION *****************************************/
  { "keys": [ "command+ctrl+alt+g"        ], "command": "typescript_go_to_definition" },
  { "keys": [ "ctrl+shift+t,ctrl+shift+r" ], "command": "typescript_rename"           },
  { "keys": [ "ctrl+shift+t,ctrl+shift+f" ], "command": "typescript_find_references"  },

  // Select all matches of current selection
  { "keys": [ "command+ctrl+g" ], "command": "find_all_under" },

  // Expand selection to whitespace:  command + shift + x
  // { "keys": [ "command+ctrl+f" ], "command": "expand_selection_to_function_javascript" },

  // Navigate downward using alt + down
  { "keys": ["alt+down"], "description": "nav down",
    "command": "chain", "args": {"commands": [
        ["move", {"by": "lines", "forward": true}],
        ["move", {"by": "stops", "empty_line": true, "forward": true}],
        ["move", {"by": "lines", "forward": false}]
    ]}
  },

  { "keys": [ "ctrl+alt+shift+a" ], "command": "toggle_setting", "args": {"setting": "word_wrap"} },

/********************************************** MISC **********************************************/
  { "keys": [ "command+shift+z"  ], "command": "redo"      },
  { "keys": [ "ctrl+alt+shift+p" ], "command": "copy_path" },

  // Overwrite text - i.e. 'uninsert'
  { "keys": [ "command+ctrl+enter" ], "command": "toggle_overwrite" },
  { "keys": [ "command+ctrl+up"    ], "command": "swap_line_up"     },
  { "keys": [ "command+ctrl+down"  ], "command": "swap_line_down"   },

  { "keys": [ "command+k,command+b" ], "command": "toggle_side_bar" },

/********************************************* MACROS *********************************************/
  { "keys": ["ctrl+command+e"], "command": "toggle_record_macro" },
  { "keys": ["ctrl+command+shift+e"], "command": "run_macro" },

  { "keys": [ "command+ctrl+alt+f" ], "command": "run_macro_file",
    "context": [{"key": "selector", "operator": "equal", "operand": "source.js,source.ts,source.tsx,source.jsx"}],
    "args": {"file": "~/Library/Application Support/Sublime Text 3/Packages/User/snippets/macros/sublime/js/js--replace-function-with-const-and-arrow.sublime-macro"}
  },

  { "keys": ["ctrl+shift+minus"], "command": "jump_forward" },

]
