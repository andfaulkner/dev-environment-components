#!/usr/bin/env sh

echo '----------------------------------------------------------------------------------------------'
echo 'COLLECTION OF HANDY REGEXES'
echo '----------------------------------------------------------------------------------------------'
echo 'Select all lines containing a puts statement added for debugging (for replacement)'
echo '        \n^[^a-zA-Z0-9_]*puts\s['"].*$"']'
echo 'Sublime snippets: only create a comma if there is anything inputted for $2'
echo '        ${2/(.+)/, /g}'
echo ''
echo 'LOOKBEHIND & LOOKAHEAD'
echo '    Positive Lookbehind:     (?<=foo)'	
echo '    Negative Lookbehind:     (?<!foo)'	
echo '    Positive Lookahead:      (?=foo)'	
echo '    Negative Lookahead:      (?!foo)'	
echo ''
echo ' Examples: '
echo '    * Positive Lookahead '
echo '        v^(?=\w{6,10}$)                validate that str solely made of 6-10 word char'
echo ''
echo '        (?=[^a-z]*[a-z](\!|"))         match 0+ non-lowercase chars, then 1 lowercase char'
echo '                                       then at some point in the rest of the line, either a '
echo '                                       ! or a "'
echo '    * Negative Lookbehind '
echo '        (?<!USD)10212                  will match JPX10212 & USDA10212, but not USD10212.' 
echo '                                       Matches 10212 as long as USD is not DIRECTLY before it'
echo ''
echo 'NOTES: Order of Lookaheads barely Matters. See http://www.rexegg.com/regex-lookarounds.html'
echo ''
echo 'ANDROID STUDIO FIND & REPLACES'
echo '    * Replace verbose empty contents of auto-generated methods with a concise { }: '
echo '        \{\n.*?\/\/[\s\t]{0,2}((TODO Auto-generated method stub)|(\/\/.?do nothing))*?$\n((.*?\})|.*?\n.*?\}) '
echo '    * Replace multiline split-up else statements (   } \n  else  \n  { ) with single line:'
echo '         \}\n[^a-zA-Z0-9_\n]*else\n[^a-zA-Z0-9\n_]*\{ '
echo '    * Replace if(  with if (  << add a space '
echo '         FIND:     if\(      REPLACE:     if ( '
echo ''
echo '## Android app log filtering'
echo '    * exclude all lines containing pointless OS-level getSlotFromBufferLocked C++ error:'
echo '        ^(?:(?! E/Surface: getSlotFromBufferLocked: unknown buffer: ).)*$\r?\n? '
echo '----------------------------------------------------------------------------------------------'
