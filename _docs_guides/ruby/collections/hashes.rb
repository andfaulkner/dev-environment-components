#!/usr/bin/env ruby

# GET THE JSON MODULE
require 'json'

# LOAD THE TEST FILES
hash_test_file = File.open("./hash_test.txt", "r")
hash_test_file_2 = File.open("./hash_test.txt", "r")

puts "------------------------------------------------------------------------------------------"
###################################
#          DEFINE A HASH          #
###################################
puts "***************** DEFINE A HASH *****************"

meeka = {"age"=>4, "name"=>"meeka"}

puts "***************** OUTPUT DATA FROM A HASH *****************"
puts meeka["name"]
puts meeka["age"]


puts "------------------------------------------------------------------------------------------"
###############################################################
#          ITERATE OVER A HASH / LOOP THROUGH A HASH          #
###############################################################
puts "***************** ITERATE OVER A HASH / LOOP THROUGH A HASH *****************"
puts " ----- ITERATE THROUGH A HASH USING each -----"
furniture = { couch: 32, sofa: 89, chair: 200 }

furniture.each {|seat, price|
	puts "seat: #{seat} costs #{price}"
}



puts "------------------------------------------------------------------------------------------"
#######################################################################
#          REDUCING HASHES (MANIPULATING HASHES WITH reduce)          #
#######################################################################
puts "***************** REDUCING HASHES (MANIPULATING HASHES WITH reduce) *****************"


puts "***************** RETURN A NEW HASH FROM A REDUCE *****************"
hash_from_file = hash_test_file.reduce({}) do |total, line| 
	line_key_value_array = line.chomp.split(":").map{|item|item.strip}
	total[line_key_value_array[0]]=line_key_value_array[1]
	total
end
puts hash_from_file

puts "***************** RETURN NEW HASH FROM A REDUCE W/ A MERGE IN THE REUDCE *****************"
# ALTERNATIVELY :
hash_from_file_2 = hash_test_file_2.reduce({}) do |total, line|
	line_key_value_array = line.chomp.split(":").map{|item|item.strip}
	total.merge( { line_key_value_array[0] => line_key_value_array[1] } )
end
puts hash_from_file_2

puts "------------------------------------------------------------------------------------------"
hash_test_file.close
hash_test_file_2.close
puts "------------------------------------------------------------------------------------------"

######################################
#          HASHES FROM JSON          #
######################################
puts "***************** HASHES FROM JSON *****************"

json_file = File.open("./commented_json.json").reduce do |output, line|
	! line.match(/^\s*\/\//) ? output + line.strip : output
end

# ALTERNATIVE:
# json_file = File.open("./json_with_comments.json").reject { |line|
# 	/^\s*\/\//.match(line)
# }.reduce { |output, line|
# 	output + line.strip
# }

puts json_file # => outputs the file in string form

puts JSON.parse(json_file.to_s)


# PARSE A JSON OBJECT (IN STRING FORM)
my_hash = JSON.parse('{"hello": "goodbye"}')
puts my_hash # => {"hello"=>"goodbye"}

# RETRIEVE AN ELEMENT FROM THE HASH GENERATED BY PARSING A PARSED JSON OBJECT
puts my_hash["hello"] # => goodbye

