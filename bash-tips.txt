#!sh

# Symbolic links - file linking
ln -s /file/to/link/to location/and/name/of/symbolic/link
    # -- the link appears in this case at 'location/and/name/of/symbolic/link' 

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ REGEXES ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
(?=pat)  - positive lookahead
(?!pat)  - negative lookahead
(?<=pat) - positive lookbehind
(?<!pat) - negative lookbehind


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~ POSTGRES FROM TERMINAL ~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Perform a database dump, to backup all data within
=======
CLEAN THIS UP, DUDE

#=== FUNCTION ================================================================
#        NAME:  bu
# DESCRIPTION:  create backup file
#=============================================================================
function bu() { 
  HOUR=`date +%k`
  TIME=$HOUR:`date +%M`:`date +%S`
  cp ./ $@.backup--date-20`date +%y`-`date +%m`-`date +%d`--$TIME;
}

# perform a database dump, to backup all data within
cp outfile outfile_bk && rm outfile || cp outfile_bk outfile_bk_2 && rm outfile_bk && cp outfile outfile_bk && rm outfile

pg_dump dbname > outfile

# Restore a database from a database dump
dropdb isight;
psql isight < outfile; make es-reindex-data; # es-reindex data is NB, won't show changes otherwise 

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ VIM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* Vim find & replace:: general form:    %s/from/to/g          #g: all; i: ignore-case
    Example:    %s/^\n^echo.*$/Y/g
    # replace all matches (blankline followed by 'echo' as 1st item on new line) with 'Y'

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ACK ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* Show lines around match:          --context=2
* Show lines before or after match: --after-context=2 ..OR.. --before-context=2
* Match highlighting:               --color           ..OR.. --nocolor

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ AWK ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
awk '{$1=""; print $0}' # print all but the 1st column of output
awk '{$1=""; $2=""; print $0}' # print all but the 1st & 2nd column of output
awk '{$NF=""; print $0}' # print all but the last column of output
awk '{print $NF}' # print only the last column of output
awk '{print $1 $3}' # print the 1st & 3rd column of output
awk -F ':' '{print $(NF)}' #treat : as the column separator, then output last 'column'


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ DIRECTORY STACK ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
pushd path/to/dir # places dir at path/to/dir atop the stack
popd              # cd to location atop dir stack, rm item from top of stack 
dirs              # list all items on the directory stack. Args: 
                    # -N  Nth dir in stack (from end);    -l  full paths (no ~);   
                    # +N  Nth dir in stack (from start);  -p  one path / line 

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ BASH SCRIPTING ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* Suppress error output:  2>/dev/null   ..e.g..   mkdir -p ~/temp_bk 2>/dev/null

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ BASH CONTROL FLOW ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* $# - Get num args passed to fn:  $# 
       e.g:  if [ $# -eq 0 ]; then echo "$#"; fi  #--> 0 (if no args given 2 fn)

* Single line if statements: see preceding item for an example

* && # Only run next step if preceding step worked
* || # Run next step if preceding step failed
    * e.g.: ls -ar && echo "ran" || echo "quit" #-> .. -> ran   [since ls -ar is a real cmd]
            tc4bbt && echo "ran" || echo "quit" #-> .. -> quit  [because tc4bbt isnt a cmd]


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ GIT ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* git diff      <<< default: compare cur branch changed files vs. cur branch last commit / index

git tag AF-pwd-dsl-1.4 -f -m "about to attempt pwd success msg      >>>>confirmed working:     #### length::_ALL_      #### mandatory::_ALL_;       #### forbid::whitespace::_ALL_;   ##forbid:: #--errMsg #--which--[];   ##forbid:: #--errMsh #--which<group, <group,errMsg>>;   #forbid:: #--which<group, errMsg>"

* get tag history, newest to oldest
git tag -n2

* rename a tag:
git tag AF--pwd-dsl-1.4 AF-pwd-dsl-1.4
git tag -d AF-pwd-dsl-1.4



#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ PERMISSIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

sudo visudo   #...TO ACCESS sudo PERMISSIONS


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ SENECA ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

alias nrn_seneca_reduced_1='export LOG_LEVEL=trace; nodemon server.js | ack -v "eraro|gate-executor" | ack "^2016.*ERROR.*act.*OUT.*\/.*\{.*\}" --no-color | awk "{\$1=\"\";\$3=\"\"; \$NF=\"\"; \$(NF-1)=\"\"; \$(NF-2)=\"\"; print\" \n\"\$0}"'
